#summary upload an image to a user's account
#labels Featured,Phase-Implementation

= Upload an Image =

== Introduction ==

With this method an image can be uploaded to a user's account.

Restrictions:
  * Max file size: 4MB
  * Accepted formats: JPG, GIF, PNG


== Uploading an Image ==

*Parameters*
  * oauth_consumer_key
  * oauth_token
  * oauth_signature_method
  * oauth_signature
  * oauth_timestamp
  * oauth_nonce
  * image
    * value: the file to be uploaded
  * content_type
    * values:
      * adult
      * family
  * thumb_format - _(optional)_
    * values:
      * JPG _(default)_
      * GIF
  * thumb_size _(optional)_
    * values:
      * 100x100 _(default)_
      * 150x150
      * 180x180
  * thumb_cropping _(optional)_
    * values:
      * 0 _(aspect ratio will be preserved)_
      * 1 _(default - thumbnail will be cropped to a square)_
  * thumb_info _(optional)_
    * values:
      * 0 _(default)_
      * 1 _(information about the image size and resolution will be appended to the thumbnail)_
  * gallery_id _(optional)_
    * value:
      * 32 character long alphanumeric string identifying a user's gallery 
  * response_format  _(optional)_
    * values:
      * JSON _(default)_


*ATTENTION*<br>
Make sure that the image data is being posted correctly! (Content-Type: multipart/form-data)<br>

You MUST provide the user the option to pick the *content_type*.<br>
Please note that a maximum number of 500 images can be assigned to a gallery.

The parameter *image* must be sent via POST method. All other parameters may be sent either via GET or POST method to following URL:
{{{
http://www.imagebam.com/sys/API/resource/upload_image
}}}



Example *JSON* Response:
{{{
{
     "rsp": {
          "stat": "ok", 
           "image": {
                    "ID":"asdffd1234",
                    "URL":"http://www.imagebam.com/image/asdffd1234",
                    "thumbnail":"http://thumbnails20.imagebam.com/123/asdffd1234.jpg"
                    "GID":"asdfasdfasdfasdfasdfasdfasdfasdf"
           }
     }
}
}}}


The request can fail for the following reasons:
  * invalid OAuth authentication
  * missing parameters
  * invalid parameters
  * invalid image size
  * invalid image format
  * image has been banned from ImageBam
  * internal error

In the case of an invalid OAuth authentication the response will be in the format required by the OAuth Core 1.0a.

==Error Codes==
  * _100_ - no image was uploaded or the upload failed
  * _101_ - image size exceeds 4MB or file type not accepted
  * _102_ - image has been banned from ImageBam
  * _102_ - invalid or missing parameter: content_type
  * _103_ - invalid parameter: thumb_format
  * _104_ - invalid parameter: thumb_size
  * _105_ - invalid parameter: thumb_cropping
  * _106_ - invalid parameter: thumb_info
  * _107_ - invalid parameter: gallery_id
  * _108_ - permission denied: gallery_id
  * _109_ - gallery contains maximum of 500 images
  * _110_ - invalid parameter: response_format
  * _111_ - an internal error has occurred




==Example Code==
===PHP using cURL===
{{{
// required parameters for the OAuth-authentication
// replace all parameters!
$API_key = "XXXX6E6JXQUGXXXX";
$API_secret = "XXXXLUJPLQU5KH3WM75SLBBI16YXXXX";
$oauth_nonce = "123456";
$oauth_token = "XXXXVVaKj1SmadeAmlU9IYBUOgVTXXXX";
$oauth_token_secret = "XXXXaPYwaTESXXXX";
$oauth_timestamp = time();
$oauth_signature_method = "MD5";

// build the signature string
$oauth_signature_string = "";
$oauth_signature_string .= $API_key;
$oauth_signature_string .= $API_secret;
$oauth_signature_string .= $oauth_timestamp;
$oauth_signature_string .= $oauth_nonce;
$oauth_signature_string .= $oauth_token;
$oauth_signature_string .= $oauth_token_secret;

// calculate the MD5-checksum of the signature string
$oauth_signature = md5($oauth_signature_string);

// populate an array with parameters
$pvars   = array(
        // parameters required by OAuth
        "oauth_consumer_key" => $API_key,
        "oauth_signature_method" => $oauth_signature_method,
        "oauth_signature" => $oauth_signature,
        "oauth_timestamp" => $oauth_timestamp,
        "oauth_nonce" => $oauth_nonce,
        "oauth_token" => $oauth_token,
        
        // optional parameters
        "content_type" => "family",
        "thumb_format" => "JPG",
        "thumb_size" => "100x100",
        "thumb_cropping" => 0,
        "thumb_info" => 1,
        "gallery_id" => "asdfasdfasdfasdfasdfasdfasdfasdf",
        "response_format" => "JSON",
        "image" => "@/path/to/file.jpg" // ATTENTION - note the @ infront of the filename!
);

// initialize curl and set parameters
$curl    = curl_init();
curl_setopt($curl, CURLOPT_URL, 'http://www.imagebam.com/sys/API/resource/upload_image');
curl_setopt($curl, CURLOPT_TIMEOUT, 30);
curl_setopt($curl, CURLOPT_POST, 1);
curl_setopt($curl, CURLOPT_POSTFIELDS, $pvars);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);

// execute, get information and close connection
$response = curl_exec($curl);
$info = curl_getinfo($curl);
curl_close ($curl);

// check if the http-code is 200
if($info['http_code'] != 200) {
    exit("OAuth error: ".$response);
}

// decode the json-encoded response
$response_array = json_decode($response);

// print nicely
print("<pre>");
print_r($response_array);
print("</pre>");
}}}